// Generated from src/dot/Dot.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class DotLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly STRICT = 12;
	public static readonly GRAPH = 13;
	public static readonly DIGRAPH = 14;
	public static readonly NODE = 15;
	public static readonly EDGE = 16;
	public static readonly SUBGRAPH = 17;
	public static readonly NUMBER = 18;
	public static readonly STRING = 19;
	public static readonly ID = 20;
	public static readonly HTML_STRING = 21;
	public static readonly COMMENT = 22;
	public static readonly LINE_COMMENT = 23;
	public static readonly PREPROC = 24;
	public static readonly WS = 25;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "STRICT", "GRAPH", "DIGRAPH", "NODE", "EDGE", "SUBGRAPH", 
		"NUMBER", "DIGIT", "STRING", "ID", "LETTER", "HTML_STRING", "TAG", "COMMENT", 
		"LINE_COMMENT", "PREPROC", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'{'", "'}'", "';'", "'='", "'['", "']'", "','", "'->'", "'--'", 
		"':'", "'_'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, "STRICT", "GRAPH", 
		"DIGRAPH", "NODE", "EDGE", "SUBGRAPH", "NUMBER", "STRING", "ID", "HTML_STRING", 
		"COMMENT", "LINE_COMMENT", "PREPROC", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(DotLexer._LITERAL_NAMES, DotLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return DotLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(DotLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Dot.g4"; }

	// @Override
	public get ruleNames(): string[] { return DotLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return DotLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return DotLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return DotLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1B\xEC\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
		"\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03" +
		"\t\x03\n\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03" +
		"\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F" +
		"\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10" +
		"\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12" +
		"\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13" +
		"\x05\x13}\n\x13\x03\x13\x03\x13\x06\x13\x81\n\x13\r\x13\x0E\x13\x82\x03" +
		"\x13\x06\x13\x86\n\x13\r\x13\x0E\x13\x87\x03\x13\x03\x13\x07\x13\x8C\n" +
		"\x13\f\x13\x0E\x13\x8F\v\x13\x05\x13\x91\n\x13\x05\x13\x93\n\x13\x03\x14" +
		"\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x07\x15\x9B\n\x15\f\x15\x0E\x15" +
		"\x9E\v\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x07\x16\xA5\n\x16\f" +
		"\x16\x0E\x16\xA8\v\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x07\x18" +
		"\xAF\n\x18\f\x18\x0E\x18\xB2\v\x18\x03\x18\x03\x18\x03\x19\x03\x19\x07" +
		"\x19\xB8\n\x19\f\x19\x0E\x19\xBB\v\x19\x03\x19\x03\x19\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x07\x1A\xC3\n\x1A\f\x1A\x0E\x1A\xC6\v\x1A\x03\x1A\x03" +
		"\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x07\x1B\xD1" +
		"\n\x1B\f\x1B\x0E\x1B\xD4\v\x1B\x03\x1B\x05\x1B\xD7\n\x1B\x03\x1B\x03\x1B" +
		"\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x07\x1C\xDF\n\x1C\f\x1C\x0E\x1C\xE2\v" +
		"\x1C\x03\x1C\x03\x1C\x03\x1D\x06\x1D\xE7\n\x1D\r\x1D\x0E\x1D\xE8\x03\x1D" +
		"\x03\x1D\x06\x9C\xB9\xC4\xD2\x02\x02\x1E\x03\x02\x03\x05\x02\x04\x07\x02" +
		"\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02" +
		"\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12" +
		"#\x02\x13%\x02\x14\'\x02\x02)\x02\x15+\x02\x16-\x02\x02/\x02\x171\x02" +
		"\x023\x02\x185\x02\x197\x02\x1A9\x02\x1B\x03\x02\x16\x04\x02UUuu\x04\x02" +
		"VVvv\x04\x02TTtt\x04\x02KKkk\x04\x02EEee\x04\x02IIii\x04\x02CCcc\x04\x02" +
		"RRrr\x04\x02JJjj\x04\x02FFff\x04\x02PPpp\x04\x02QQqq\x04\x02GGgg\x04\x02" +
		"WWww\x04\x02DDdd\x03\x022;\x06\x02C\\aac|\x82\u0101\x04\x02>>@@\x04\x02" +
		"\f\f\x0F\x0F\x05\x02\v\f\x0F\x0F\"\"\x02\xFA\x02\x03\x03\x02\x02\x02\x02" +
		"\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02" +
		"\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11" +
		"\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17" +
		"\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D" +
		"\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03" +
		"\x02\x02\x02\x02%\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02" +
		"\x02\x02/\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x02" +
		"7\x03\x02\x02\x02\x029\x03\x02\x02\x02\x03;\x03\x02\x02\x02\x05=\x03\x02" +
		"\x02\x02\x07?\x03\x02\x02\x02\tA\x03\x02\x02\x02\vC\x03\x02\x02\x02\r" +
		"E\x03\x02\x02\x02\x0FG\x03\x02\x02\x02\x11I\x03\x02\x02\x02\x13L\x03\x02" +
		"\x02\x02\x15O\x03\x02\x02\x02\x17Q\x03\x02\x02\x02\x19S\x03\x02\x02\x02" +
		"\x1BZ\x03\x02\x02\x02\x1D`\x03\x02\x02\x02\x1Fh\x03\x02\x02\x02!m\x03" +
		"\x02\x02\x02#r\x03\x02\x02\x02%|\x03\x02\x02\x02\'\x94\x03\x02\x02\x02" +
		")\x96\x03\x02\x02\x02+\xA1\x03\x02\x02\x02-\xA9\x03\x02\x02\x02/\xAB\x03" +
		"\x02\x02\x021\xB5\x03\x02\x02\x023\xBE\x03\x02\x02\x025\xCC\x03\x02\x02" +
		"\x027\xDC\x03\x02\x02\x029\xE6\x03\x02\x02\x02;<\x07}\x02\x02<\x04\x03" +
		"\x02\x02\x02=>\x07\x7F\x02\x02>\x06\x03\x02\x02\x02?@\x07=\x02\x02@\b" +
		"\x03\x02\x02\x02AB\x07?\x02\x02B\n\x03\x02\x02\x02CD\x07]\x02\x02D\f\x03" +
		"\x02\x02\x02EF\x07_\x02\x02F\x0E\x03\x02\x02\x02GH\x07.\x02\x02H\x10\x03" +
		"\x02\x02\x02IJ\x07/\x02\x02JK\x07@\x02\x02K\x12\x03\x02\x02\x02LM\x07" +
		"/\x02\x02MN\x07/\x02\x02N\x14\x03\x02\x02\x02OP\x07<\x02\x02P\x16\x03" +
		"\x02\x02\x02QR\x07a\x02\x02R\x18\x03\x02\x02\x02ST\t\x02\x02\x02TU\t\x03" +
		"\x02\x02UV\t\x04\x02\x02VW\t\x05\x02\x02WX\t\x06\x02\x02XY\t\x03\x02\x02" +
		"Y\x1A\x03\x02\x02\x02Z[\t\x07\x02\x02[\\\t\x04\x02\x02\\]\t\b\x02\x02" +
		"]^\t\t\x02\x02^_\t\n\x02\x02_\x1C\x03\x02\x02\x02`a\t\v\x02\x02ab\t\x05" +
		"\x02\x02bc\t\x07\x02\x02cd\t\x04\x02\x02de\t\b\x02\x02ef\t\t\x02\x02f" +
		"g\t\n\x02\x02g\x1E\x03\x02\x02\x02hi\t\f\x02\x02ij\t\r\x02\x02jk\t\v\x02" +
		"\x02kl\t\x0E\x02\x02l \x03\x02\x02\x02mn\t\x0E\x02\x02no\t\v\x02\x02o" +
		"p\t\x07\x02\x02pq\t\x0E\x02\x02q\"\x03\x02\x02\x02rs\t\x02\x02\x02st\t" +
		"\x0F\x02\x02tu\t\x10\x02\x02uv\t\x07\x02\x02vw\t\x04\x02\x02wx\t\b\x02" +
		"\x02xy\t\t\x02\x02yz\t\n\x02\x02z$\x03\x02\x02\x02{}\x07/\x02\x02|{\x03" +
		"\x02\x02\x02|}\x03\x02\x02\x02}\x92\x03\x02\x02\x02~\x80\x070\x02\x02" +
		"\x7F\x81\x05\'\x14\x02\x80\x7F\x03\x02\x02\x02\x81\x82\x03\x02\x02\x02" +
		"\x82\x80\x03\x02\x02\x02\x82\x83\x03\x02\x02\x02\x83\x93\x03\x02\x02\x02" +
		"\x84\x86\x05\'\x14\x02\x85\x84\x03\x02\x02\x02\x86\x87\x03\x02\x02\x02" +
		"\x87\x85\x03\x02\x02\x02\x87\x88\x03\x02\x02\x02\x88\x90\x03\x02\x02\x02" +
		"\x89\x8D\x070\x02\x02\x8A\x8C\x05\'\x14\x02\x8B\x8A\x03\x02\x02\x02\x8C" +
		"\x8F\x03\x02\x02\x02\x8D\x8B\x03\x02\x02\x02\x8D\x8E\x03\x02\x02\x02\x8E" +
		"\x91\x03\x02\x02\x02\x8F\x8D\x03\x02\x02\x02\x90\x89\x03\x02\x02\x02\x90" +
		"\x91\x03\x02\x02\x02\x91\x93\x03\x02\x02\x02\x92~\x03\x02\x02\x02\x92" +
		"\x85\x03\x02\x02\x02\x93&\x03\x02\x02\x02\x94\x95\t\x11\x02\x02\x95(\x03" +
		"\x02\x02\x02\x96\x9C\x07$\x02\x02\x97\x98\x07^\x02\x02\x98\x9B\x07$\x02" +
		"\x02\x99\x9B\v\x02\x02\x02\x9A\x97\x03\x02\x02\x02\x9A\x99\x03\x02\x02" +
		"\x02\x9B\x9E\x03\x02\x02\x02\x9C\x9D\x03\x02\x02\x02\x9C\x9A\x03\x02\x02" +
		"\x02\x9D\x9F\x03\x02\x02\x02\x9E\x9C\x03\x02\x02\x02\x9F\xA0\x07$\x02" +
		"\x02\xA0*\x03\x02\x02\x02\xA1\xA6\x05-\x17\x02\xA2\xA5\x05-\x17\x02\xA3" +
		"\xA5\x05\'\x14\x02\xA4\xA2\x03\x02\x02\x02\xA4\xA3\x03\x02\x02\x02\xA5" +
		"\xA8\x03\x02\x02\x02\xA6\xA4\x03\x02\x02\x02\xA6\xA7\x03\x02\x02\x02\xA7" +
		",\x03\x02\x02\x02\xA8\xA6\x03\x02\x02\x02\xA9\xAA\t\x12\x02\x02\xAA.\x03" +
		"\x02\x02\x02\xAB\xB0\x07>\x02\x02\xAC\xAF\x051\x19\x02\xAD\xAF\n\x13\x02" +
		"\x02\xAE\xAC\x03\x02\x02\x02\xAE\xAD\x03\x02\x02\x02\xAF\xB2\x03\x02\x02" +
		"\x02\xB0\xAE\x03\x02\x02\x02\xB0\xB1\x03\x02\x02\x02\xB1\xB3\x03\x02\x02" +
		"\x02\xB2\xB0\x03\x02\x02\x02\xB3\xB4\x07@\x02\x02\xB40\x03\x02\x02\x02" +
		"\xB5\xB9\x07>\x02\x02\xB6\xB8\v\x02\x02\x02\xB7\xB6\x03\x02\x02\x02\xB8" +
		"\xBB\x03\x02\x02\x02\xB9\xBA\x03\x02\x02\x02\xB9\xB7\x03\x02\x02\x02\xBA" +
		"\xBC\x03\x02\x02\x02\xBB\xB9\x03\x02\x02\x02\xBC\xBD\x07@\x02\x02\xBD" +
		"2\x03\x02\x02\x02\xBE\xBF\x071\x02\x02\xBF\xC0\x07,\x02\x02\xC0\xC4\x03" +
		"\x02\x02\x02\xC1\xC3\v\x02\x02\x02\xC2\xC1\x03\x02\x02\x02\xC3\xC6\x03" +
		"\x02\x02\x02\xC4\xC5\x03\x02\x02\x02\xC4\xC2\x03\x02\x02\x02\xC5\xC7\x03" +
		"\x02\x02\x02\xC6\xC4\x03\x02\x02\x02\xC7\xC8\x07,\x02\x02\xC8\xC9\x07" +
		"1\x02\x02\xC9\xCA\x03\x02\x02\x02\xCA\xCB\b\x1A\x02\x02\xCB4\x03\x02\x02" +
		"\x02\xCC\xCD\x071\x02\x02\xCD\xCE\x071\x02\x02\xCE\xD2\x03\x02\x02\x02" +
		"\xCF\xD1\v\x02\x02\x02\xD0\xCF\x03\x02\x02\x02\xD1\xD4\x03\x02\x02\x02" +
		"\xD2\xD3\x03\x02\x02\x02\xD2\xD0\x03\x02\x02\x02\xD3\xD6\x03\x02\x02\x02" +
		"\xD4\xD2\x03\x02\x02\x02\xD5\xD7\x07\x0F\x02\x02\xD6\xD5\x03\x02\x02\x02" +
		"\xD6\xD7\x03\x02\x02\x02\xD7\xD8\x03\x02\x02\x02\xD8\xD9\x07\f\x02\x02" +
		"\xD9\xDA\x03\x02\x02\x02\xDA\xDB\b\x1B\x02\x02\xDB6\x03\x02\x02\x02\xDC" +
		"\xE0\x07%\x02\x02\xDD\xDF\n\x14\x02\x02\xDE\xDD\x03\x02\x02\x02\xDF\xE2" +
		"\x03\x02\x02\x02\xE0\xDE\x03\x02\x02\x02\xE0\xE1\x03\x02\x02\x02\xE1\xE3" +
		"\x03\x02\x02\x02\xE2\xE0\x03\x02\x02\x02\xE3\xE4\b\x1C\x02\x02\xE48\x03" +
		"\x02\x02\x02\xE5\xE7\t\x15\x02\x02\xE6\xE5\x03\x02\x02\x02\xE7\xE8\x03" +
		"\x02\x02\x02\xE8\xE6\x03\x02\x02\x02\xE8\xE9\x03\x02\x02\x02\xE9\xEA\x03" +
		"\x02\x02\x02\xEA\xEB\b\x1D\x03\x02\xEB:\x03\x02\x02\x02\x15\x02|\x82\x87" +
		"\x8D\x90\x92\x9A\x9C\xA4\xA6\xAE\xB0\xB9\xC4\xD2\xD6\xE0\xE8\x04\x02\x03" +
		"\x02\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!DotLexer.__ATN) {
			DotLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(DotLexer._serializedATN));
		}

		return DotLexer.__ATN;
	}

}

